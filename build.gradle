// Top-level build file where you can add configuration options common to all sub-projects/modules.
import org.apache.commons.io.FileUtils

buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

static String getApkDirectory(String buildType, String appName) {
    return String.format("%s/build/outputs/apk/%s/", appName, buildType)
}

task copyApk() {
    doLast {
        def appNames = (project.appNames as String).split ","
        def buildType = project.buildType as String
        appNames.each { appName ->
            def path = getApkDirectory(buildType, appName)
            def filePath = file(path)
            if (filePath.isDirectory()) {
                def apkFiles = filePath.listFiles({ dir, name -> name.endsWith ".apk" } as FilenameFilter)
                if (apkFiles != null) {
                    for (def apk : apkFiles) {
                        println "Copying: ${apk.name}"
                        FileUtils.copyFileToDirectory(apk, rootProject.projectDir)
                    }
                }
            }
        }
    }
}

task removeApk() {
    rootProject
            .projectDir
            .listFiles({ _, name -> name.endsWith(".apk") } as FilenameFilter)
            .each { file -> println("Removing: ${file.name}"); file.delete() }
}

copyApk.onlyIf {
    project.hasProperty("buildType") and project.hasProperty("appNames")
}